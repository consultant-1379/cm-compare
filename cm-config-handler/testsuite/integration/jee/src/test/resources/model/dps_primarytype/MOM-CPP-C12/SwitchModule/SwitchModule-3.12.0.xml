<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--

*******************************************************************************
* COPYRIGHT Ericsson LMI 2013. All rights reserved.
*
* No part of this document may be reproduced in any form without the
* written permission of the copyright owner.The contents of this document
* are subject to revision without notice due to continued progress in
* methodology, design and manufacturing. Ericsson shall have no liability
* for any error or damage of any kind resulting from the use of this document.
*
*******************************************************************************


--><ns2:PrimaryTypeDefinition xmlns:ns1="urn:com:ericsson:schema:xml:oss:oss_common" xmlns:ns2="urn:com:ericsson:schema:xml:oss:dps_primarytype" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" hierarchyType="HIERARCHICAL" ns1:lifeCycle="CURRENT" ns1:name="SwitchModule" ns1:ns="MOM-CPP-C12" ns1:version="3.12.0" root="false">
  <ns1:modelCreationInfo author="mom-xml-transformer-tool" creationDate="2013-09-18 19:48:14.167">
    <ns1:derivedModel derivedFrom="/dps_primarytype/MOM-CPP-C12/MOM-CPP-C12/3.12.0"/>
  </ns1:modelCreationInfo>
  <ns1:desc>This MO represents two switch planes of one subrack, that is either the main switch or an external switch.

If a non-redundant system, the administrativeStateSwitchPlaneA/B has to be set to LOCKED for the non-present plane.</ns1:desc>
  <ns2:primaryTypeAttribute ns1:lifeCycle="CURRENT" ns1:name="SwitchModuleId" readBehavior="INHERITED" restricted="true" writeBehavior="INHERITED">
    <ns1:desc>The value component of the RDN.</ns1:desc>
    <ns1:type xsi:type="ns1:stringType">
      <ns1:notNullConstraint/>
    </ns1:type>
  </ns2:primaryTypeAttribute>
  <ns2:primaryTypeAttribute ns1:lifeCycle="CURRENT" ns1:name="userLabel" readBehavior="INHERITED" restricted="false" writeBehavior="INHERITED">
    <ns1:desc>Label for free use.</ns1:desc>
    <ns1:type xsi:type="ns1:stringType">
      <ns1:stringLengthConstraint>
        <ns1:minMaxLength max="128" min="0"/>
      </ns1:stringLengthConstraint>
    </ns1:type>
    <ns1:default value="&quot;&quot;" xsi:type="ns1:stringValue"/>
  </ns2:primaryTypeAttribute>
  <ns2:primaryTypeAttribute ns1:lifeCycle="CURRENT" ns1:name="switchModuleNumber" readBehavior="INHERITED" restricted="true" writeBehavior="INHERITED">
    <ns1:desc>Specifies the number of the switch module (SMN).

switchModuleNumber &amp;gt;= 0

The main switch module, with one or two TimingUnits, is given SMN = 0. SMN for extension switch modules depends on the port pair that the extension switch module is connected to in the main switch module.

The SMN is calculated according to the following formula:

switchModuleNumber [1..255] = int (APN/2)*8 + ISL-port in main [1..8]
where,
APN = ASCC Port Number
ISL = Inter-Switch Link</ns1:desc>
    <ns1:type xsi:type="ns1:longType">
      <ns1:notNullConstraint/>
      <ns1:valueRangeConstraint>
        <ns1:minMaxRange max="255" min="0"/>
      </ns1:valueRangeConstraint>
    </ns1:type>
  </ns2:primaryTypeAttribute>
  <ns2:primaryTypeAttribute ns1:lifeCycle="CURRENT" ns1:name="secondSmnEvaluation" readBehavior="FROM_DELEGATE" restricted="false" writeBehavior="NOT_ALLOWED">
    <ns1:desc>Second Switch Module Number (SMN) Evaluation

There are two cables that are relevant for SMN numbering:
- If the cabling is wrong, secondSmnEvaluation shows the second opinion about the switchModuleNumber.
- Under normal conditions secondSmnEvaluation = switchModuleNumber.</ns1:desc>
    <ns1:type xsi:type="ns1:longType"/>
  </ns2:primaryTypeAttribute>
  <ns2:primaryTypeAttribute ns1:lifeCycle="CURRENT" ns1:name="administrativeState" readBehavior="INHERITED" restricted="false" writeBehavior="INHERITED">
    <ns1:desc>The administrative state.

When setting the administrativeState to SHUTTING_DOWN, a notification that the state has been changed to LOCKED is sent towards the operator. There is however no guarantee that this operation has been successful due to limitations in the resource layer.</ns1:desc>
    <ns1:type modelUrn="//MOM-CPP-C12/AdmState/3.12.0" xsi:type="ns1:enumRefType"/>
    <ns1:default value="UNLOCKED" xsi:type="ns1:stringValue"/>
  </ns2:primaryTypeAttribute>
  <ns2:primaryTypeAttribute ns1:lifeCycle="CURRENT" ns1:name="administrativeStateSwitchPlaneA" readBehavior="INHERITED" restricted="false" writeBehavior="INHERITED">
    <ns1:desc>The administrative state of switch plane A.
It is not allowed to lock both switch plane A and B.

When setting the administrativeState to SHUTTING_DOWN, a notification that the state has been changed to LOCKED is sent towards the operator. There is however no guarantee that this operation has been successful due to limitations in the resource layer.</ns1:desc>
    <ns1:type modelUrn="//MOM-CPP-C12/AdmState/3.12.0" xsi:type="ns1:enumRefType"/>
    <ns1:default value="UNLOCKED" xsi:type="ns1:stringValue"/>
  </ns2:primaryTypeAttribute>
  <ns2:primaryTypeAttribute ns1:lifeCycle="CURRENT" ns1:name="administrativeStateSwitchPlaneB" readBehavior="INHERITED" restricted="false" writeBehavior="INHERITED">
    <ns1:desc>The administrative state of switch plane B.
It is not allowed to lock both switch plane A and B.

When setting the administrativeState to SHUTTING_DOWN, a notification that the state has been changed to LOCKED is sent towards the operator. There is however no guarantee that this operation has been successful due to limitations in the resource layer.</ns1:desc>
    <ns1:type modelUrn="//MOM-CPP-C12/AdmState/3.12.0" xsi:type="ns1:enumRefType"/>
    <ns1:default value="UNLOCKED" xsi:type="ns1:stringValue"/>
  </ns2:primaryTypeAttribute>
  <ns2:primaryTypeAttribute ns1:lifeCycle="CURRENT" ns1:name="operationalState" readBehavior="FROM_DELEGATE" restricted="false" writeBehavior="NOT_ALLOWED">
    <ns1:desc>The operational state.

At least one of the switch planes is set to ENABLED.</ns1:desc>
    <ns1:type modelUrn="//MOM-CPP-C12/OperState/3.12.0" xsi:type="ns1:enumRefType"/>
  </ns2:primaryTypeAttribute>
  <ns2:primaryTypeAttribute ns1:lifeCycle="CURRENT" ns1:name="operationalStateSwitchPlaneA" readBehavior="FROM_DELEGATE" restricted="false" writeBehavior="NOT_ALLOWED">
    <ns1:desc>The operational state of Switch Module plane A.

This attribute is set to DISABLED if any of the switch ports is faulty. But the switch may still be used.</ns1:desc>
    <ns1:type modelUrn="//MOM-CPP-C12/OperState/3.12.0" xsi:type="ns1:enumRefType"/>
  </ns2:primaryTypeAttribute>
  <ns2:primaryTypeAttribute ns1:lifeCycle="CURRENT" ns1:name="operationalStateSwitchPlaneB" readBehavior="FROM_DELEGATE" restricted="false" writeBehavior="NOT_ALLOWED">
    <ns1:desc>The operational state of Switch Module plane B.

This attribute is set to DISABLED if any of the switch ports is faulty. But the switch may still be used.</ns1:desc>
    <ns1:type modelUrn="//MOM-CPP-C12/OperState/3.12.0" xsi:type="ns1:enumRefType"/>
  </ns2:primaryTypeAttribute>
  <ns2:primaryTypeAttribute ns1:lifeCycle="CURRENT" ns1:name="availabilityStatus" readBehavior="FROM_DELEGATE" restricted="false" writeBehavior="NOT_ALLOWED">
    <ns1:desc>The availability status.

It contains details about operationalState.</ns1:desc>
    <ns1:type modelUrn="//MOM-CPP-C12/AvailabilityStatus/3.12.0" xsi:type="ns1:enumRefType"/>
  </ns2:primaryTypeAttribute>
  <ns2:primaryTypeAttribute ns1:lifeCycle="CURRENT" ns1:name="availabilityStatusSwitchPlaneA" readBehavior="FROM_DELEGATE" restricted="false" writeBehavior="NOT_ALLOWED">
    <ns1:desc>The availability status of the Switch Plane A.

It contains details about operationalState.</ns1:desc>
    <ns1:type modelUrn="//MOM-CPP-C12/AvailabilityStatus/3.12.0" xsi:type="ns1:enumRefType"/>
  </ns2:primaryTypeAttribute>
  <ns2:primaryTypeAttribute ns1:lifeCycle="CURRENT" ns1:name="availabilityStatusSwitchPlaneB" readBehavior="FROM_DELEGATE" restricted="false" writeBehavior="NOT_ALLOWED">
    <ns1:desc>The availability status of the Switch Plane B.

It contains details about operationalState.</ns1:desc>
    <ns1:type modelUrn="//MOM-CPP-C12/AvailabilityStatus/3.12.0" xsi:type="ns1:enumRefType"/>
  </ns2:primaryTypeAttribute>
  <ns2:primaryTypeAttribute ns1:lifeCycle="CURRENT" ns1:name="activeSwitchPlane" readBehavior="FROM_DELEGATE" restricted="false" writeBehavior="NOT_ALLOWED">
    <ns1:desc>Specifies the active switch plane: A or B.

During multiple faults, both plan A and B may be used.</ns1:desc>
    <ns1:type modelUrn="//MOM-CPP-C12/ActiveSwitchPlane/3.12.0" xsi:type="ns1:enumRefType"/>
  </ns2:primaryTypeAttribute>
  <ns2:primaryTypeAttribute ns1:lifeCycle="CURRENT" ns1:name="reservedBy" readBehavior="FROM_PERSISTENCE" restricted="false" writeBehavior="NOT_ALLOWED">
    <ns1:desc>Contains a list of MO instances that reserve this MO instance.</ns1:desc>
    <ns1:type xsi:type="ns1:listType">
      <ns1:collectionValuesType modelUrn="//MOM-CPP-C12/ManagedObject/3.12.0" xsi:type="ns1:moRefType"/>
    </ns1:type>
  </ns2:primaryTypeAttribute>
</ns2:PrimaryTypeDefinition>
